{"ast":null,"code":"import { mockProducts, mockCategories, mockUser, mockReviews } from '../data/mockData';\n\n// Simulation d'un délai réseau\nconst delay = ms => new Promise(resolve => setTimeout(resolve, ms));\nexport const mockApiService = {\n  // Authentification\n  login: async credentials => {\n    await delay(500);\n    if (credentials.email === 'admin@ecommerce.com' && credentials.motdepasse === 'admin123') {\n      return {\n        data: {\n          success: true,\n          token: 'mock-jwt-token-admin',\n          user: {\n            ...mockUser,\n            role: 'admin',\n            email: credentials.email\n          }\n        }\n      };\n    } else if (credentials.email === 'client@test.com' && credentials.motdepasse === 'client123') {\n      return {\n        data: {\n          success: true,\n          token: 'mock-jwt-token-client',\n          user: {\n            ...mockUser,\n            email: credentials.email\n          }\n        }\n      };\n    } else {\n      throw new Error('Email ou mot de passe incorrect');\n    }\n  },\n  register: async userData => {\n    await delay(500);\n    return {\n      data: {\n        success: true,\n        user: {\n          ...userData,\n          id: Date.now(),\n          role: 'client'\n        }\n      }\n    };\n  },\n  // Produits\n  getProducts: async (params = {}) => {\n    await delay(300);\n    let filteredProducts = [...mockProducts];\n    if (params.recherche) {\n      filteredProducts = filteredProducts.filter(p => p.nom.toLowerCase().includes(params.recherche.toLowerCase()));\n    }\n    if (params.categorie) {\n      filteredProducts = filteredProducts.filter(p => p.categorie.id === parseInt(params.categorie));\n    }\n    return {\n      data: {\n        success: true,\n        data: filteredProducts,\n        pagination: {\n          current_page: 1,\n          last_page: 1,\n          per_page: 12,\n          total: filteredProducts.length\n        },\n        filtres: {\n          categories: mockCategories,\n          marques: ['Apple', 'Samsung', 'EcoWear', 'CleanBot', 'UrbanBike'],\n          prix_min: 29.99,\n          prix_max: 1499.00\n        }\n      }\n    };\n  },\n  getProduct: async id => {\n    await delay(200);\n    const product = mockProducts.find(p => p.id === parseInt(id));\n    if (!product) {\n      throw new Error('Produit non trouvé');\n    }\n    return {\n      data: {\n        success: true,\n        data: product\n      }\n    };\n  },\n  // Catégories\n  getCategories: async () => {\n    await delay(200);\n    return {\n      data: {\n        success: true,\n        data: mockCategories\n      }\n    };\n  },\n  // Reviews\n  getProductReviews: async productId => {\n    await delay(300);\n    return {\n      data: {\n        success: true,\n        data: mockReviews,\n        statistiques: {\n          moyenne: 4.5,\n          total: 2,\n          repartition: {\n            5: {\n              count: 1,\n              pourcentage: 50\n            },\n            4: {\n              count: 1,\n              pourcentage: 50\n            },\n            3: {\n              count: 0,\n              pourcentage: 0\n            },\n            2: {\n              count: 0,\n              pourcentage: 0\n            },\n            1: {\n              count: 0,\n              pourcentage: 0\n            }\n          }\n        }\n      }\n    };\n  },\n  // Wishlist\n  getWishlist: async () => {\n    await delay(200);\n    const wishlistItems = JSON.parse(localStorage.getItem('mockWishlist') || '[]');\n    const wishlistProducts = mockProducts.filter(p => wishlistItems.includes(p.id));\n    return {\n      data: {\n        success: true,\n        data: wishlistProducts,\n        total: wishlistProducts.length\n      }\n    };\n  },\n  addToWishlist: async productId => {\n    await delay(200);\n    const wishlist = JSON.parse(localStorage.getItem('mockWishlist') || '[]');\n    if (!wishlist.includes(parseInt(productId))) {\n      wishlist.push(parseInt(productId));\n      localStorage.setItem('mockWishlist', JSON.stringify(wishlist));\n    }\n    return {\n      data: {\n        success: true,\n        message: 'Produit ajouté à votre liste de souhaits'\n      }\n    };\n  },\n  removeFromWishlist: async productId => {\n    await delay(200);\n    const wishlist = JSON.parse(localStorage.getItem('mockWishlist') || '[]');\n    const newWishlist = wishlist.filter(id => id !== parseInt(productId));\n    localStorage.setItem('mockWishlist', JSON.stringify(newWishlist));\n    return {\n      data: {\n        success: true,\n        message: 'Produit retiré de votre liste de souhaits'\n      }\n    };\n  },\n  checkWishlist: async productId => {\n    await delay(100);\n    const wishlist = JSON.parse(localStorage.getItem('mockWishlist') || '[]');\n    return {\n      data: {\n        success: true,\n        in_wishlist: wishlist.includes(parseInt(productId))\n      }\n    };\n  }\n};","map":{"version":3,"names":["mockProducts","mockCategories","mockUser","mockReviews","delay","ms","Promise","resolve","setTimeout","mockApiService","login","credentials","email","motdepasse","data","success","token","user","role","Error","register","userData","id","Date","now","getProducts","params","filteredProducts","recherche","filter","p","nom","toLowerCase","includes","categorie","parseInt","pagination","current_page","last_page","per_page","total","length","filtres","categories","marques","prix_min","prix_max","getProduct","product","find","getCategories","getProductReviews","productId","statistiques","moyenne","repartition","count","pourcentage","getWishlist","wishlistItems","JSON","parse","localStorage","getItem","wishlistProducts","addToWishlist","wishlist","push","setItem","stringify","message","removeFromWishlist","newWishlist","checkWishlist","in_wishlist"],"sources":["C:/Users/Public/Libraries/one/Hanane/frontend/src/services/mockApiService.js"],"sourcesContent":["import { mockProducts, mockCategories, mockUser, mockReviews } from '../data/mockData';\r\n\r\n// Simulation d'un délai réseau\r\nconst delay = (ms) => new Promise(resolve => setTimeout(resolve, ms));\r\n\r\nexport const mockApiService = {\r\n  // Authentification\r\n  login: async (credentials) => {\r\n    await delay(500);\r\n    if (credentials.email === 'admin@ecommerce.com' && credentials.motdepasse === 'admin123') {\r\n      return {\r\n        data: {\r\n          success: true,\r\n          token: 'mock-jwt-token-admin',\r\n          user: { ...mockUser, role: 'admin', email: credentials.email }\r\n        }\r\n      };\r\n    } else if (credentials.email === 'client@test.com' && credentials.motdepasse === 'client123') {\r\n      return {\r\n        data: {\r\n          success: true,\r\n          token: 'mock-jwt-token-client',\r\n          user: { ...mockUser, email: credentials.email }\r\n        }\r\n      };\r\n    } else {\r\n      throw new Error('Email ou mot de passe incorrect');\r\n    }\r\n  },\r\n\r\n  register: async (userData) => {\r\n    await delay(500);\r\n    return {\r\n      data: {\r\n        success: true,\r\n        user: { ...userData, id: Date.now(), role: 'client' }\r\n      }\r\n    };\r\n  },\r\n\r\n  // Produits\r\n  getProducts: async (params = {}) => {\r\n    await delay(300);\r\n    let filteredProducts = [...mockProducts];\r\n    \r\n    if (params.recherche) {\r\n      filteredProducts = filteredProducts.filter(p => \r\n        p.nom.toLowerCase().includes(params.recherche.toLowerCase())\r\n      );\r\n    }\r\n    \r\n    if (params.categorie) {\r\n      filteredProducts = filteredProducts.filter(p => \r\n        p.categorie.id === parseInt(params.categorie)\r\n      );\r\n    }\r\n\r\n    return {\r\n      data: {\r\n        success: true,\r\n        data: filteredProducts,\r\n        pagination: {\r\n          current_page: 1,\r\n          last_page: 1,\r\n          per_page: 12,\r\n          total: filteredProducts.length\r\n        },\r\n        filtres: {\r\n          categories: mockCategories,\r\n          marques: ['Apple', 'Samsung', 'EcoWear', 'CleanBot', 'UrbanBike'],\r\n          prix_min: 29.99,\r\n          prix_max: 1499.00\r\n        }\r\n      }\r\n    };\r\n  },\r\n\r\n  getProduct: async (id) => {\r\n    await delay(200);\r\n    const product = mockProducts.find(p => p.id === parseInt(id));\r\n    if (!product) {\r\n      throw new Error('Produit non trouvé');\r\n    }\r\n    return {\r\n      data: {\r\n        success: true,\r\n        data: product\r\n      }\r\n    };\r\n  },\r\n\r\n  // Catégories\r\n  getCategories: async () => {\r\n    await delay(200);\r\n    return {\r\n      data: {\r\n        success: true,\r\n        data: mockCategories\r\n      }\r\n    };\r\n  },\r\n\r\n  // Reviews\r\n  getProductReviews: async (productId) => {\r\n    await delay(300);\r\n    return {\r\n      data: {\r\n        success: true,\r\n        data: mockReviews,\r\n        statistiques: {\r\n          moyenne: 4.5,\r\n          total: 2,\r\n          repartition: {\r\n            5: { count: 1, pourcentage: 50 },\r\n            4: { count: 1, pourcentage: 50 },\r\n            3: { count: 0, pourcentage: 0 },\r\n            2: { count: 0, pourcentage: 0 },\r\n            1: { count: 0, pourcentage: 0 }\r\n          }\r\n        }\r\n      }\r\n    };\r\n  },\r\n\r\n  // Wishlist\r\n  getWishlist: async () => {\r\n    await delay(200);\r\n    const wishlistItems = JSON.parse(localStorage.getItem('mockWishlist') || '[]');\r\n    const wishlistProducts = mockProducts.filter(p => wishlistItems.includes(p.id));\r\n    return {\r\n      data: {\r\n        success: true,\r\n        data: wishlistProducts,\r\n        total: wishlistProducts.length\r\n      }\r\n    };\r\n  },\r\n\r\n  addToWishlist: async (productId) => {\r\n    await delay(200);\r\n    const wishlist = JSON.parse(localStorage.getItem('mockWishlist') || '[]');\r\n    if (!wishlist.includes(parseInt(productId))) {\r\n      wishlist.push(parseInt(productId));\r\n      localStorage.setItem('mockWishlist', JSON.stringify(wishlist));\r\n    }\r\n    return {\r\n      data: {\r\n        success: true,\r\n        message: 'Produit ajouté à votre liste de souhaits'\r\n      }\r\n    };\r\n  },\r\n\r\n  removeFromWishlist: async (productId) => {\r\n    await delay(200);\r\n    const wishlist = JSON.parse(localStorage.getItem('mockWishlist') || '[]');\r\n    const newWishlist = wishlist.filter(id => id !== parseInt(productId));\r\n    localStorage.setItem('mockWishlist', JSON.stringify(newWishlist));\r\n    return {\r\n      data: {\r\n        success: true,\r\n        message: 'Produit retiré de votre liste de souhaits'\r\n      }\r\n    };\r\n  },\r\n\r\n  checkWishlist: async (productId) => {\r\n    await delay(100);\r\n    const wishlist = JSON.parse(localStorage.getItem('mockWishlist') || '[]');\r\n    return {\r\n      data: {\r\n        success: true,\r\n        in_wishlist: wishlist.includes(parseInt(productId))\r\n      }\r\n    };\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}